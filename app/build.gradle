//apply plugin: 'com.android.application'
//
//android {
//    compileSdkVersion 24
//    buildToolsVersion "24.0.3"
//    defaultConfig {
//        applicationId "io.github.fabriciobedin.googlecalendar"
//        minSdkVersion 15
//        targetSdkVersion 24
//        versionCode 1
//        versionName "1.0"
//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//    }
//    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
//    }
//}
//
//dependencies {
//    compile fileTree(dir: 'libs', include: ['*.jar'])
//    //androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
//    //    exclude group: 'com.android.support', module: 'support-annotations'
//   // })
//    compile 'com.android.support:appcompat-v7:24.2.1'
//    compile 'com.google.android.gms:play-services-auth:9.0.2'
//    compile 'pub.devrel:easypermissions:0.1.5'
//    compile('com.google.api-client:google-api-client-android:1.22.0') {
//        exclude group: 'org.apache.httpcomponents'
//    }
//    compile('com.google.apis:google-api-services-calendar:v3-rev219-1.22.0') {
//        exclude group: 'org.apache.httpcomponents'
//    }
//
//    testCompile 'junit:junit:4.12'
//}

apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.3"

    defaultConfig {
        applicationId "io.github.fabriciobedin.googlecalendar"
        minSdkVersion 14
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        //buildConfigField "String", "FORECAST_IO_API_KEY", "\"97b232a76771e4bd5fcd985da278ac0d\""
    }


    lintOptions {
        htmlReport false
        xmlReport false
        textReport true
        warningsAsErrors true
        abortOnError true
        explainIssues false
        absolutePaths false
        ignore "InvalidPackage" // square/okio#58
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            exceptionFormat 'full'
        }
        maxHeapSize = '2048m'
        maxParallelForks = 1
        forkEvery = 1
        jacoco {
            includeNoLocationClasses = true
        }
    }
}

ext {
    supportVersion = '23.4.0'
    retrofit2Version = '2.0.0'
    robolectricVersion = '3.0'
    assertjVersion = '1.1.1'
}

dependencies {
    compile "com.android.support:appcompat-v7:$supportVersion",
            "com.android.support:recyclerview-v7:$supportVersion",
            "com.android.support:design:$supportVersion",
            "com.squareup.retrofit2:retrofit:$retrofit2Version",
            "com.squareup.retrofit2:converter-gson:$retrofit2Version",
            testCompile ("org.robolectric:robolectric:$robolectricVersion"),
            "org.robolectric:shadows-support-v4:$robolectricVersion"

    testCompile("com.squareup.assertj:assertj-android:$assertjVersion") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        html.destination "${buildDir}/reports/coverage"
    }

    executionData = files "${buildDir}/jacoco/testDebugUnitTest.exec"
    sourceDirectories = files android.sourceSets.main.java.srcDirs
    classDirectories = fileTree(dir: "${buildDir}/intermediates/classes/debug",
            exclude: [ '**/R.class', '**/R$*.class' ])

    doLast {
        println "coveralls report has been generated to file://${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        println "coverage report generated at file://${reports.html.destination}/index.html"
    }
}